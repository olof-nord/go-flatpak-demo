name: Pipeline
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Check out code
        uses: actions/checkout@v2

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -race ./...

      - name: Build
        run: go build -v

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: go-flatpak-demo-${{ github.run_number }}
          path: go-flatpak-demo

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download build artifacts
        id: release_artifacts
        uses: actions/download-artifact@v2
        with:
          path: go-flatpak-demo

      # Debug: See what artifacts were downloaded
      - run: ls -la ${{ steps.release_artifacts.outputs.string }}

      - name: Create release
        # if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: README.md
          draft: true
          prerelease: true

      - name: Upload release asset
        # if: github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object,
          # which includes an `upload_url`.
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/go-flatpak-demo/go-flatpak-demo/go-flatpak-demo
          asset_name: go-flatpak-demo-${{ github.run_number }}
          asset_content_type: application/zip
